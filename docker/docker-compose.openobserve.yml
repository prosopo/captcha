services:
    caddy:
        container_name: caddy
        pull_policy: never
        profiles:
            - production
            - staging
        image: prosopo/caddy:latest
        env_file:
            - ../.env.${NODE_ENV}
        labels:
            - "oo.caddy=true" # enable logging as caddy
            - "oo.docker=true" # log docker events
        restart: unless-stopped  # unless the container has been stopped, it will be restarted, even on reboot
        ports:
            - '8018:80'
            - '44318:443'
            - '44318:443/udp'
        volumes:
            - ./oo.Caddyfile:/etc/caddy/Caddyfile
            - caddy_data:/data
            - caddy_config:/config
        networks:
            external:
            internal:
        logging:
            driver: 'json-file'
            options:
                max-size: '100m'
                max-file: '1'
        healthcheck:
            test: ["CMD", "curl", "--fail", "localhost:2019/metrics"]  # ping the caddy admin api
            interval: 5m
            retries: 3
            start_period: 30s
            timeout: 10s
    oo1:
        container_name: oo1
        profiles:
            - production
            - staging
        image: public.ecr.aws/zinclabs/openobserve:latest
        ports:
          - "5080:5080"
        env_file:
            - ../.env.${NODE_ENV}
        labels:
            - "oo.docker=true" # log docker events
        restart: unless-stopped # unless the container has been stopped, it will be restarted, even on reboot
        volumes:
          - /data/oo:/data
        networks:
            - internal
        logging:
            driver: 'json-file'
            options:
                max-size: '100m'
                max-file: '1'
        dns:
            - 8.8.8.8
            - 1.1.1.1
            - 208.67.222.222
    oo2:
        container_name: oo2
        profiles:
          - production
          - staging
        image: public.ecr.aws/zinclabs/openobserve:latest
        ports:
          - "5081:5080"
        env_file:
          - ../.env.${NODE_ENV}
        labels:
          - "oo.docker=true" # log docker events
        restart: unless-stopped # unless the container has been stopped, it will be restarted, even on reboot
        volumes:
          - /data/oo:/data
        networks:
          - internal
        logging:
          driver: 'json-file'
          options:
            max-size: '100m'
            max-file: '1'
        dns:
          - 8.8.8.8
          - 1.1.1.1
          - 208.67.222.222
networks:
    internal:
        name: internal
    external:
        name: external
volumes:
    caddy_data:
    caddy_config:
