# usage: `caddy run --config ./docker/provider.Caddyfile --envfile docker/env.development`
{
	# debug
	http_port {$CADDY_HTTP_PORT:80}
	auto_https {$CADDY_AUTO_HTTPS:disable_redirects}
	admin {$CADDY_ADMIN_API::2020} # set the admin api to run on localhost:2020 (default is 2019 which can conflict with caddy daemon)

	# Caddy must be told custom rate_limit module its order
	order rate_limit before basicauth

	client_hello {
		# Configure the maximum allowed ClientHello packet size in bytes (1-16384)
		max_client_hello_size 16384
	}

	servers {
		protocols h1 h2
		listener_wrappers {
			http_redirect
			client_hello
			tls
		}
		timeouts {
			read_body 15s
			read_header 10s
			write 15s
			idle 5m
		}
	}
}

{$CADDY_DOMAIN} {
	route {
		client_hello

		header / {
			# Enable HTTP Strict Transport Security (HSTS)
			Strict-Transport-Security "max-age=31536000;"
			# Enable cross-site filter (XSS) and tell browser to block detected attacks
			X-XSS-Protection "1; mode=block"
			# Disallow the site to be rendered within a frame (clickjacking protection)
			X-Frame-Options "DENY"
			# Prevent search engines from indexing
			X-Robots-Tag "none"
		}

		# basicauth /metrics {
		# 	 # this has to be the username<space><bcrypted password>
		# 	 # to generate, run `htpasswd -nbB <username> <password>` which will spit out `<username>:<bcrypted password>`
		# 	 {$CADDY_METRICS_USER} {$CADDY_METRICS_PASSWORD}
		# }

		# reverse proxy the metrics path to the metrics emitted by caddy on the admin api
		# reverse_proxy /metrics {$CADDY_ADMIN_API}

		rate_limit {
			distributed

			# Means that the rate limit is applied to all GET requests, with a limit of 100 requests per minute.
			# zone get_rate_limit {
			# 	match {
			# 		method GET
			# 	}
			# 	key static
			# 	events 100
			# 	window 1m
			# }

			# The rate limit is applied to `remote_host` with a limit of 6 requests per 6 seconds (60 requests per minute).
			zone dynamic_example {
				key {remote_host}
				events {$CADDY_RATE_LIMIT_EVENTS}
				window {$CADDY_RATE_LIMIT_WINDOW}
			}
			log_key
		}

		# reverse proxy to the provider container
		reverse_proxy {$CADDY_PROVIDER_CONTAINER_NAME:provider1}:{$CADDY_PROVIDER_PORT:9229} {$CADDY_PROVIDER_CONTAINER_NAME:provider2}:{$CADDY_PROVIDER_PORT2:9339} {
            lb_policy first
            lb_try_duration 5s
            lb_try_interval 250ms
            fail_duration 10s
            max_fails 1
            unhealthy_status 5xx
            unhealthy_latency 5s
            unhealthy_request_count 1

			# https://caddyserver.com/docs/caddyfile/concepts#placeholders
			# https://caddyserver.com/docs/json/apps/http/#docs

			header_up x-request-id "{request_id}"

			header_up x-tls-version "{tls_version}"
			header_up x-tls-version "^{tls_version}$" ""

			header_up x-tls-client-subject "{tls_client_subject}"
			header_up x-tls-client-subject "^{tls_client_subject}$" ""

			header_up x-tls-client-serial "{tls_client_serial}"
			header_up x-tls-client-serial "^{tls_client_serial}$" ""

			header_up x-tls-client-issuer "{tls_client_issuer}"
			header_up x-tls-client-issuer "^{tls_client_issuer}$" ""

			header_up x-tls-client-fingerprint "{tls_client_fingerprint}"
			header_up x-tls-client-fingerprint "^{tls_client_fingerprint}$" ""

			header_up x-tls-client-certificate-pem "{tls_client_certificate_pem}"
			header_up x-tls-client-certificate-pem "^{tls_client_certificate_pem}$" ""

			header_up x-tls-client-certificate-der-base64 "{tls_client_certificate_der_base64}"
			header_up x-tls-client-certificate-der-base64 "^{tls_client_certificate_der_base64}$" ""

			header_up x-tls-cipher "{tls_cipher}"
			header_up x-tls-cipher "^{tls_cipher}$" ""

			header_up x-remote-port "{remote_port}"
			header_up x-remote-port "^{remote_port}$" ""

			header_up x-remote-host "{remote_host}"
			header_up x-remote-host "^{remote_host}$" ""

			header_up x-method "{method}"
			header_up x-method "^{method}$" ""

			header_up x-client-ip "{client_ip}"
			header_up x-client-ip "^{client_ip}$" ""

			header_up x-duration-ms {http.request.duration}
			header_up x-duration-ms "^{http.request.duration}$" ""

			header_up x-tls-resumed "{http.request.tls.resumed}"
			header_up x-tls-resumed "^{http.request.tls.resumed}$" ""

			header_up x-tls-proto "{http.request.tls.proto}"
			header_up x-tls-proto "^{http.request.tls.proto}$" ""

			header_up x-tls-proto-mutual "{http.request.tls.proto_mutual}"
			header_up x-tls-proto-mutual "^{http.request.tls.proto_mutual}$" ""

			header_up x-tls-server-name "{http.request.tls.server_name}"
			header_up x-tls-server-name "^{http.request.tls.server_name}$" ""

			header_up x-tls-public-key "{http.request.tls.public_key}"
			header_up x-tls-public-key "^{http.request.tls.public_key}$" ""

			header_up x-tls-public-key-sha256 "{http.request.tls.public_key_sha256}"
			header_up x-tls-public-key-sha256 "^{http.request.tls.public_key_sha256}$" ""

			header_up x-tls-client-san-dns-names "{http.request.tls.client.san.dns_names}"
			header_up x-tls-client-san-dns-names "^{http.request.tls.client.san.dns_names}$" ""

			header_up x-tls-client-san-emails "{http.request.tls.client.san.emails}"
			header_up x-tls-client-san-emails "^{http.request.tls.client.san.emails}$" ""

			header_up x-tls-client-san-ips "{http.request.tls.client.san.ips}"
			header_up x-tls-client-san-ips "^{http.request.tls.client.san.ips}$" ""

			header_up x-tls-client-san-uris "{http.request.tls.client.san.uris}"
			header_up x-tls-client-san-uris "^{http.request.tls.client.san.uris}$" ""


		}
	}

	log {
		format json
	}
}
