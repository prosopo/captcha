{
	"name": "@prosopo/captcha",
	"version": "2.1.0",
	"author": "Prosopo",
	"type": "module",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/prosopo/captcha.git"
	},
	"scripts": {
		"hostid": "npm run cmd -- \"dig +short %s.prosopo.io | tail -n1 | tee /dev/tty | nslookup | cut -d = -f 2 | head -n1 | cut -d ' ' -f 2 | sed 's/\\.*$//g'\"",
		"cmd:about": "perform string substitution on the command and then execute it. Make sure to use --, e.g. npm run cmd -- my args here",
		"cmd": "f() { (cmd=$1; shift; printf \"$cmd\" $@ | bash -ex) ;}; f",
		"build": "npm run cmd -- \"npm run -w @prosopo/%s build\"",
		"build:all": "npm run ws -- build",
		"build:all:cjs": "npm run ws -- --if-present build:cjs",
		"bundle:all": "npm run ws -- --if-present bundle",
		"build:bundle": "npm run -w @prosopo/procaptcha-bundle bundle",
		"clean": "npm run cmd -- \"npm run -w @prosopo/%s clean\"",
		"clean-npm:node-modules": "rimraf --glob --verbose '**/node_modules'",
		"clean-npm:package-lock": "rimraf --glob --verbose '**/package-lock.json'",
		"clean:npm": "run-p clean-npm:*",
		"clean-ts:buildinfo": "rimraf --glob --verbose '**/*.tsbuildinfo'",
		"clean-ts:dist": "rimraf --glob --verbose '**/dist'",
		"clean:ts": "run-p clean-ts:*",
		"clean:all": "npm run ws -- clean",
		"i": "npm i",
		"nuke": "run-s clean:ts clean:npm i",
		"deploy_dapp": "npm run -w @prosopo/scripts cli deploy_dapp -- --logLevel=debug --update_env",
		"version": "f() { npm run -w @prosopo/scripts cli -- version -v $@; npm i; }; f",
		"publish:dry-run": "npm --workspaces publish --dry-run",
		"publish": "npm --workspaces publish --access=public",
		"ws:ls": "npm run --workspaces env | grep npm_package_name | cut -d '=' -f 2",
		"ws:about": "run a command for each workspace member, exiting immediately if any command fails. Don't forget the `--` !",
		"ws": "f() { (set -e; npm run --silent ws:ls | while read -r line; do npm run -w $line $@; done); }; f",
		"cli": "npm -w @prosopo/cli run cli",
		"setup": "npm -w @prosopo/scripts run setup",
		"setup:all": "npm run setup",
		"start:provider": "npm -w @prosopo/cli run start",
		"start:provider:admin": "npm -w @prosopo/cli run start:admin",
		"start:server": "npm -w @prosopo/client-example-server run start",
		"start:demo": "npm -w @prosopo/client-example run start",
		"start:bundle": "npm -w @prosopo/client-bundle-example run start",
		"start:all": "npx concurrently \"npm run start:server\" \"npm run start:provider\" \"npm run start:demo\" \"npm run start:bundle\" --kill-others",
		"start:all:pow": "npx concurrently \"npm run start:server\" \"npm run start:provider\" \"npm run start:demo:pow\" \"npm run start:bundle\" --kill-others",
		"populate-data": "npm -w @prosopo/provider run populate-data",
		"test": "npm run ws -- test",
		"lint:license": "npm run -w @prosopo/scripts license",
		"lint-fix:license": "npm run -w @prosopo/scripts license:fix",
		"lint:js": "biome check .",
		"lint-fix:js": "npm run --silent lint:js -- --fix --unsafe",
		"lint": "run-s lint:*",
		"lint-fix": "run-s lint-fix:*",
		"docker:rust": "f() { if [ \"$CI\" = \"true\" ]; then FLAGS=''; else FLAGS='-it'; fi ; mkdir -p node_modules/cargo-cache && docker run --rm $FLAGS -u $(id -u):$(id -g) --cpu-quota=-1 -v $PWD:/src -v $PWD/node_modules/cargo-cache:/usr/local/cargo/registry prosopo/cargo-contract:4.1.1 \"export RUST_BACKTRACE=1; $@\" ;}; f",
		"lint-changed:js": "npm run --silent lint:js -- --changed",
		"lint-changed-fix:js": "npm run --silent lint-fix:js -- --changed",
		"removePolkadotJSWarnings": "sed -i 's/console.warn\\(.*\\);//g' ./node_modules/@polkadot/util/versionDetect.js && sed -i 's/console.warn\\(.*\\);//g' ./node_modules/@polkadot/util/cjs/versionDetect.js || true",
		"postinstall": "npm run removePolkadotJSWarnings",
		"sbom:spdx": "npm sbom --sbom-format spdx > sbom.spdx.json",
		"sbom:cyclonedx": "npm sbom --sbom-format cyclonedx > sbom.cyclonedx.json",
		"sbom": "run-s sbom:*",
		"ws:pkg": "npm run --silent ws:ls | xargs -I {} npm run --silent pkgjson -- {}",
		"ws:dir": "npm run --silent ws:ls | xargs -I {} npm run --silent pkgdir -- {}",
		"pkgjson": "f() { npx -w $1 node -e 'console.log(process.cwd()+\"/package.json\")' ;}; f",
		"pkgdir": "f() { npx -w $1 node -e 'console.log(process.cwd())' ;}; f",
		"depcheck": "npm run --silent ws:pkg | xargs -P 1 --verbose -I {} bash -c 'cd $(dirname {}) && npx depcheck --ignores vite,vitest,@vitest/coverage-v8,rimraf,concurrently,npm-run-all,tslib,typescript,tsx || true; echo \"\"'",
		"deps:ls": "npm run --silent ws:pkg | xargs -I {} bash -c 'cat {} | jq .dependencies | head -n -1 | tail -n +2' | tr -d ',' | sort | uniq",
		"deps:dupe": "npm run deps:ls | awk -F': ' 'NF {count[$1]++; lines[$1] = lines[$1] $0 \"\\n\"} END {for (pkg in count) if (count[pkg] > 1) printf \"%s\", lines[pkg]}' | sort",
		"audit:fix": "npm audit fix --force",
		"deps:status": "npm-check-updates --deep",
		"deps:upgrade": "npm-check-updates --deep --interactive --format group"
	},
	"private": true,
	"engines": {
		"node": ">=20",
		"npm": ">=9"
	},
	"workspaces": ["dev/*", "packages/*", "demos/*"],
	"devDependencies": {
		"@biomejs/biome": "1.9.1",
		"@taplo/cli": "0.7.0",
		"@types/node": "22.5.5",
		"@vitest/coverage-v8": "2.1.1",
		"concurrently": "9.0.1",
		"depcheck": "1.4.7",
		"htmlhint": "1.1.4",
		"markdownlint-cli": "0.41.0",
		"node-stdlib-browser": "1.2.1",
		"npm-check-updates": "17.1.1",
		"npm-run-all": "4.1.5",
		"rimraf": "6.0.1",
		"tslib": "2.7.0",
		"tsx": "4.19.1",
		"typescript": "5.6.2",
		"vite": "5.4.6",
		"vitest": "2.1.1"
	},
	"description": "Prosopo Procaptcha is a privacy-focused, secure alternative to reCAPTCHA. This repository integrates prosopo packages for development purposes.",
	"bugs": {
		"url": "https://github.com/prosopo/captcha/issues"
	},
	"homepage": "https://github.com/prosopo/captcha#readme",
	"keywords": [
		"captcha",
		"prosopo",
		"privacy",
		"security",
		"reCAPTCHA",
		"anti-bot",
		"authentication",
		"verification",
		"user-verification",
		"privacy-focused",
		"bot-detection",
		"human-verification",
		"form-security",
		"web-security",
		"anti-spam",
		"frontend-security",
		"open-source",
		"free",
		"captcha-alternative",
		"hcaptcha",
		"google-recaptcha",
		"recaptcha-alternative",
		"recaptcha-v3",
		"recaptcha-v2",
		"cloudflare-turnstile-alternative",
		"hcaptcha-alternative",
		"prosopo-captcha",
		"procaptcha",
		"prosopo-procaptcha",
		"web3-captcha"
	],
	"license": "Apache-2.0"
}
