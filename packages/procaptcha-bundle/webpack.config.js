const HtmlWebpackPlugin = require('html-webpack-plugin')
const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin
const CompressionPlugin = require('compression-webpack-plugin')
const MiniCssExtractPlugin = require('mini-css-extract-plugin')
const webpack = require('webpack')
const TerserPlugin = require('terser-webpack-plugin')
const path = require('path')
const { JsonAccessOptimizer } = require('webpack-json-access-optimizer')
const { ProvidePlugin } = require('webpack')
const { loadEnv } = require('@prosopo/cli')
const nodeExternals = require('webpack-node-externals')

console.log([
    path.resolve(__dirname, 'node_modules'),
    path.resolve(__dirname, '../../node_modules'),
    path.resolve(__dirname, '../common/node_modules'),
    path.resolve(__dirname, '../procaptcha-react/node_modules'),
])

loadEnv()

module.exports = (env, argv) => {
    const isProduction = argv.mode === 'production'
    const libraryName = 'procaptcha_bundle'
    return {
        resolve: {
            extensions: ['.js', '.jsx', '.ts', '.tsx'],
            modules: [
                path.resolve(__dirname, 'node_modules'),
                path.resolve(__dirname, '../../node_modules'),
                path.resolve(__dirname, '../common/node_modules'),
                path.resolve(__dirname, '../procaptcha-react/node_modules'),
            ],
            fullySpecified: false

        },
        entry: './src/index.tsx',
        output: {
            filename: `${libraryName}.[name].bundle.js`,
            path: path.resolve(__dirname, 'dist'),
            library: libraryName,
            chunkFilename: `${libraryName}.[name].bundle.js`,
        },
        module: {
            rules: [
                {
                    include: /node_modules/,
                    test: /\.css$/,
                    resolve: {
                        fullySpecified: false
                    },
                    sideEffects: true,
                    use: [
                        MiniCssExtractPlugin.loader,
                        {
                            loader: require.resolve('css-loader'),
                            options: {
                                url: false,
                            },
                        },
                    ],
                },
                {
                    //exclude: /(node_modules)/,
                    test: /\.(ts|tsx)$/,
                    resolve: {
                        fullySpecified: false
                    },
                    use: [
                        {
                            loader: require.resolve('ts-loader'),
                            options: {
                                configFile: 'tsconfig.webpack.json',
                                transpileOnly: true
                            },
                        },
                    ],
                },
                {
                    test: /locale\.json$/, // match JSON files to optimize
                    loader: 'webpack-json-access-optimizer',
                },
            ],
        },

        plugins: [
            new HtmlWebpackPlugin({
                template: './src/index.html',
            }),
            //new BundleAnalyzerPlugin(),
            new webpack.DefinePlugin({
                'process.env.NODE_ENV': JSON.stringify(isProduction ? 'production' : 'development'),
                'process.env.PROTOCOL_CONTRACT_ADDRESS': JSON.stringify(process.env.PROTOCOL_CONTRACT_ADDRESS),
                'process.env.DAPP_CONTRACT_ADDRESS': JSON.stringify(process.env.DAPP_CONTRACT_ADDRESS),
            }),
            // new webpack.optimize.SplitChunksPlugin(),
            new CompressionPlugin(),
            new MiniCssExtractPlugin({
                filename: 'extr.[contenthash].css',
            }),
            new ProvidePlugin({
                $t: './$tProvider',
            }),
            new JsonAccessOptimizer({
                accessorFunctionName: '$t', // i18n function name
            }),
            {
                apply: (compiler) => {
                    compiler.hooks.done.tap('DonePlugin', (stats) => {
                        console.log('Compile is done !')
                        setTimeout(() => {
                            process.exit(0)
                        })
                    })
                },
            },
        ],
        optimization: {
            // chunkIds: 'deterministic',
            // runtimeChunk: 'single',
            // splitChunks: {
            //     cacheGroups: [
            //         // all other modules
            //         ['modu', /[\\/]node_modules[\\/]/],
            //     ].reduce(
            //         (result, [name, test], index) => ({
            //             ...result,
            //             [`cacheGroup${index}`]: {
            //                 chunks: 'initial',
            //                 enforce: true,
            //                 maxSize: 1_500_000,
            //                 minSize: 0,
            //                 name,
            //                 priority: -1 * index,
            //                 test,
            //             },
            //         }),
            //         {}
            //     ),
            // },

            minimize: isProduction,
            minimizer: isProduction
                ? [
                      new TerserPlugin({
                          terserOptions: {
                              compress: {
                                  drop_console: true,
                              },
                          },
                      }),
                  ]
                : undefined,
            usedExports: true,
        },
        externals: [
            // nodeExternals({
            //     importType: 'umd',
            //     modulesDir: path.resolve(__dirname, '../../node_modules'),
            //     // this WILL include polkadot and prosopo packages to be bundled
            //     allowlist: [
            //         "csstype",
            //         "@types/prop-types",
            //         "@types/scheduler",
            //         "@types/react",
            //         "@types/react-dom",
            //         "@types/react/ts5.0",
            //         "@mui/types",
            //         "@emotion/utils/types",
            //         "@emotion/cache/types",
            //         "@emotion/serialize/types",
            //         "@emotion/react/types",
            //         "@emotion/styled/types",
            //         "@mui/styled-engine/StyledEngineProvider",
            //         "@mui/styled-engine/GlobalStyles",
            //         "@mui/styled-engine",
            //         "@mui/system/createTheme",
            //         "@mui/system/styleFunctionSx",
            //         "@mui/system",
            //         "@mui/system/Box",
            //         "@mui/private-theming/defaultTheme",
            //         "@mui/private-theming/ThemeProvider",
            //         "@mui/private-theming/useTheme",
            //         "@mui/private-theming",
            //         "@mui/system/GlobalStyles",
            //         "@mui/system/useThemeProps",
            //         "@mui/system/ThemeProvider",
            //         "@mui/system/cssVars",
            //         "@mui/system/Container",
            //         "@mui/system/Unstable_Grid",
            //         "@mui/system/Stack",
            //         "@mui/material/styles",
            //         "@mui/material/colors",
            //         "@mui/utils",
            //         "@mui/utils/composeClasses",
            //         "@mui/utils/generateUtilityClass",
            //         "@mui/utils/generateUtilityClasses",
            //         "@mui/utils/ClassNameGenerator",
            //         "@mui/material/utils",
            //         "@mui/material/SvgIcon",
            //         "@mui/base/className",
            //         "@types/react-transition-group",
            //         "@mui/material/transitions",
            //         "@mui/material/Accordion",
            //         "@mui/material/Paper",
            //         "@mui/material/AccordionActions",
            //         "@mui/material/AccordionDetails",
            //         "@mui/material/ButtonBase",
            //         "@mui/material/AccordionSummary",
            //         "@mui/material/Alert",
            //         "@mui/material/AlertTitle",
            //         "@mui/material/AppBar",
            //         "@mui/material/Chip",
            //         "@mui/base/utils",
            //         "clsx",
            //         "@popperjs/core/lib",
            //         "@popperjs/core/lib/modifiers",
            //         "@popperjs/core/lib/utils",
            //         "@popperjs/core",
            //         "@mui/base/Portal",
            //         "@mui/base/Popper",
            //         "@mui/material/Popper",
            //         "@mui/base/Badge",
            //         "@mui/base/useButton",
            //         "@mui/base/Button",
            //         "@mui/base/ClickAwayListener",
            //         "@mui/base/composeClasses",
            //         "@mui/base/FocusTrap",
            //         "@mui/base/FormControl",
            //         "@mui/base/useInput",
            //         "@mui/base/Input",
            //         "@mui/base/useList",
            //         "@mui/base/useMenuItem",
            //         "@mui/base/useMenu",
            //         "@mui/base/Menu",
            //         "@mui/base/MenuItem",
            //         "@mui/base/Modal",
            //         "@mui/base/NoSsr",
            //         "@mui/base/OptionGroup",
            //         "@mui/base/useOption",
            //         "@mui/base/Option",
            //         "@mui/base/useSelect",
            //         "@mui/base/Select",
            //         "@mui/base/useSlider",
            //         "@mui/base/Slider",
            //         "@mui/base/useSnackbar",
            //         "@mui/base/Snackbar",
            //         "@mui/base/useSwitch",
            //         "@mui/base/Switch",
            //         "@mui/base/TablePagination",
            //         "@mui/base/useTabPanel",
            //         "@mui/base/TabPanel",
            //         "@mui/base/Tabs",
            //         "@mui/base/useTabs",
            //         "@mui/base/useTabsList",
            //         "@mui/base/TabsList",
            //         "@mui/base/useTab",
            //         "@mui/base/Tab",
            //         "@mui/base/TextareaAutosize",
            //         "@mui/base/useAutocomplete",
            //         "@mui/base/useBadge",
            //         "@mui/base",
            //         "@mui/material/Autocomplete",
            //         "@mui/material/Avatar",
            //         "@mui/material/AvatarGroup",
            //         "@mui/material/Fade",
            //         "@mui/material/Backdrop",
            //         "@mui/material/Badge",
            //         "@mui/material/BottomNavigation",
            //         "@mui/material/BottomNavigationAction",
            //         "@mui/material/Breadcrumbs",
            //         "@mui/material/Button",
            //         "@mui/material/ButtonGroup",
            //         "@mui/material/Card",
            //         "@mui/material/CardActionArea",
            //         "@mui/material/CardActions",
            //         "@mui/material/CardContent",
            //         "@mui/material/Typography",
            //         "@mui/material/CardHeader",
            //         "@mui/material/CardMedia",
            //         "@mui/material/internal",
            //         "@mui/material/Checkbox",
            //         "@mui/material/CircularProgress",
            //         "@mui/material/ClickAwayListener",
            //         "@mui/material/Collapse",
            //         "@mui/material/Container",
            //         "@mui/material/CssBaseline",
            //         "@mui/material/darkScrollbar",
            //         "@mui/material/Modal",
            //         "@mui/material/Dialog",
            //         "@mui/material/DialogActions",
            //         "@mui/material/DialogContent",
            //         "@mui/material/DialogContentText",
            //         "@mui/material/DialogTitle",
            //         "@mui/material/Divider",
            //         "@mui/material/Slide",
            //         "@mui/material/Drawer",
            //         "@mui/material/Fab",
            //         "@mui/material/InputBase",
            //         "@mui/material/FilledInput",
            //         "@mui/material/FormControl",
            //         "@mui/material/FormControlLabel",
            //         "@mui/material/FormGroup",
            //         "@mui/material/FormHelperText",
            //         "@mui/material/FormLabel",
            //         "@mui/material/Grid",
            //         "@mui/material/Unstable_Grid2",
            //         "@mui/material/Grow",
            //         "@mui/material/Hidden",
            //         "@mui/material/Icon",
            //         "@mui/material/IconButton",
            //         "@mui/material/ImageList",
            //         "@mui/material/ImageListItem",
            //         "@mui/material/ImageListItemBar",
            //         "@mui/material/Input",
            //         "@mui/material/InputAdornment",
            //         "@mui/material/InputLabel",
            //         "@mui/material/LinearProgress",
            //         "@mui/material/Link",
            //         "@mui/material/List",
            //         "@mui/material/ListItem",
            //         "@mui/material/ListItemAvatar",
            //         "@mui/material/ListItemButton",
            //         "@mui/material/ListItemIcon",
            //         "@mui/material/ListItemSecondaryAction",
            //         "@mui/material/ListItemText",
            //         "@mui/material/ListSubheader",
            //         "@mui/material/Popover",
            //         "@mui/material/MenuList",
            //         "@mui/material/Menu",
            //         "@mui/material/MenuItem",
            //         "@mui/material/MobileStepper",
            //         "@mui/material/NativeSelect",
            //         "@mui/material/NoSsr",
            //         "@mui/material/OutlinedInput",
            //         "@mui/material/usePagination",
            //         "@mui/material/Pagination",
            //         "@mui/material/PaginationItem",
            //         "@mui/material/Portal",
            //         "@mui/material/Radio",
            //         "@mui/material/RadioGroup",
            //         "@mui/material/Rating",
            //         "@mui/material/ScopedCssBaseline",
            //         "@mui/material/Select",
            //         "@mui/material/Skeleton",
            //         "@mui/material/Slider",
            //         "@mui/material/SnackbarContent",
            //         "@mui/material/Snackbar",
            //         "@mui/material/SpeedDial",
            //         "@mui/material/Tooltip",
            //         "@mui/material/SpeedDialAction",
            //         "@mui/material/SpeedDialIcon",
            //         "@mui/material/Stack",
            //         "@mui/material/Step",
            //         "@mui/material/StepButton",
            //         "@mui/material/StepConnector",
            //         "@mui/material/StepContent",
            //         "@mui/material/StepIcon",
            //         "@mui/material/StepLabel",
            //         "@mui/material/Stepper",
            //         "@mui/material/SwipeableDrawer",
            //         "@mui/material/Switch",
            //         "@mui/material/Tab",
            //         "@mui/material/Table",
            //         "@mui/material/TableBody",
            //         "@mui/material/TableCell",
            //         "@mui/material/TableContainer",
            //         "@mui/material/TableFooter",
            //         "@mui/material/TableHead",
            //         "@mui/material/TablePagination",
            //         "@mui/material/TableRow",
            //         "@mui/material/TableSortLabel",
            //         "@mui/material/TabScrollButton",
            //         "@mui/material/Tabs",
            //         "@mui/material/TextField",
            //         "@mui/material/TextareaAutosize",
            //         "@mui/material/ToggleButton",
            //         "@mui/material/ToggleButtonGroup",
            //         "@mui/material/Toolbar",
            //         "@mui/material/useMediaQuery",
            //         "@mui/material/useScrollTrigger",
            //         "@mui/material/Zoom",
            //         "@mui/material/useAutocomplete",
            //         "@mui/material/GlobalStyles",
            //         "@mui/material/generateUtilityClass",
            //         "@mui/material/generateUtilityClasses",
            //         "@mui/material/Unstable_TrapFocus",
            //         "@mui/material",
            //         "@mui/material/Box",
            //         "@polkadot/types",
            //         "@polkadot/types-codec",
            //         "@types/bn.js",
            //         "@polkadot/util/bn",
            //         "@polkadot/util",
            //         "@polkadot/util/array",
            //         "@polkadot/util/bi",
            //         "@polkadot/util/hex",
            //         "@polkadot/util/buffer",
            //         "@polkadot/util/compact",
            //         "@polkadot/util/float",
            //         "@polkadot/util/format",
            //         "@polkadot/util/is",
            //         "@polkadot/util/number",
            //         "@polkadot/util/object",
            //         "@polkadot/util/string",
            //         "@polkadot/util/u8a",
            //         "@polkadot/types-codec/types",
            //         "@polkadot/types-codec/abstract",
            //         "@polkadot/types-codec/base",
            //         "@polkadot/types-codec/native",
            //         "@polkadot/types-codec/extended",
            //         "@polkadot/types-codec/primitive",
            //         "@polkadot/types-codec/utils",
            //         "@polkadot/types-create/types",
            //         "@polkadot/types/interfaces/scaleInfo",
            //         "@polkadot/types/interfaces/metadata",
            //         "@polkadot/types/types",
            //         "@polkadot/types/extrinsic/signedExtensions",
            //         "@polkadot/types/interfaces/consensus",
            //         "@polkadot/types/interfaces/extrinsics",
            //         "@polkadot/types/interfaces/runtime",
            //         "@polkadot/types/interfaces/balances",
            //         "@polkadot/types/interfaces/system",
            //         "@polkadot/types/metadata",
            //         "@polkadot/types/metadata/PortableRegistry",
            //         "@polkadot/types/interfaces/assets",
            //         "@polkadot/types/interfaces/staking",
            //         "@polkadot/types/interfaces/session",
            //         "@polkadot/types/interfaces/parachains",
            //         "@polkadot/types/interfaces/attestations",
            //         "@polkadot/types/interfaces/aura",
            //         "@polkadot/types/interfaces/author",
            //         "@polkadot/types/interfaces/authorship",
            //         "@polkadot/types/interfaces/babe",
            //         "@polkadot/types/interfaces/beefy",
            //         "@polkadot/types/interfaces/benchmark",
            //         "@polkadot/types/interfaces/blockbuilder",
            //         "@polkadot/types/interfaces/chain",
            //         "@polkadot/types/interfaces/imOnline",
            //         "@polkadot/types/interfaces/grandpa",
            //         "@polkadot/types/interfaces/bridges",
            //         "@polkadot/types/interfaces/childstate",
            //         "@polkadot/types/interfaces/claims",
            //         "@polkadot/types/interfaces/collective",
            //         "@polkadot/types/interfaces/contracts",
            //         "@polkadot/types/interfaces/contractsAbi",
            //         "@polkadot/types/interfaces/crowdloan",
            //         "@polkadot/types/interfaces/cumulus",
            //         "@polkadot/types/interfaces/elections",
            //         "@polkadot/types/interfaces/democracy",
            //         "@polkadot/types/interfaces/dev",
            //         "@polkadot/types/interfaces/discovery",
            //         "@polkadot/types/interfaces/engine",
            //         "@polkadot/types/interfaces/eth",
            //         "@polkadot/types/interfaces/evm",
            //         "@polkadot/types/interfaces/finality",
            //         "@polkadot/types/interfaces/genericAsset",
            //         "@polkadot/types/interfaces/gilt",
            //         "@polkadot/types/interfaces/identity",
            //         "@polkadot/types/interfaces/lottery",
            //         "@polkadot/types/interfaces/mmr",
            //         "@polkadot/types/interfaces/nimbus",
            //         "@polkadot/types/interfaces/nompools",
            //         "@polkadot/types/interfaces/offchain",
            //         "@polkadot/types/interfaces/offences",
            //         "@polkadot/types/interfaces/ormlOracle",
            //         "@polkadot/types/interfaces/ormlTokens",
            //         "@polkadot/types/interfaces/payment",
            //         "@polkadot/types/interfaces/poll",
            //         "@polkadot/types/interfaces/pow",
            //         "@polkadot/types/interfaces/proxy",
            //         "@polkadot/types/interfaces/purchase",
            //         "@polkadot/types/interfaces/recovery",
            //         "@polkadot/types/interfaces/rpc",
            //         "@polkadot/types/interfaces/scheduler",
            //         "@polkadot/types/interfaces/society",
            //         "@polkadot/types/interfaces/state",
            //         "@polkadot/types/interfaces/support",
            //         "@polkadot/types/interfaces/syncstate",
            //         "@polkadot/types/interfaces/treasury",
            //         "@polkadot/types/interfaces/txpayment",
            //         "@polkadot/types/interfaces/txqueue",
            //         "@polkadot/types/interfaces/uniques",
            //         "@polkadot/types/interfaces/utility",
            //         "@polkadot/types/interfaces/vesting",
            //         "@polkadot/types/interfaces/xcm",
            //         "@polkadot/types/interfaces",
            //         "@polkadot/types/primitive",
            //         "@polkadot/types/metadata/decorate",
            //         "@polkadot/types/metadata/decorate/constants",
            //         "@polkadot/types/metadata/decorate/errors",
            //         "@polkadot/types/metadata/decorate/events",
            //         "@polkadot/types/metadata/decorate/extrinsics",
            //         "@polkadot/types/metadata/decorate/storage",
            //         "rxjs/dist/types/internal",
            //         "rxjs/dist/types/internal/observable",
            //         "rxjs/dist/types/internal/operators",
            //         "rxjs/dist/types/internal/symbol",
            //         "rxjs/dist/types/internal/observable/dom",
            //         "rxjs/dist/types/internal/scheduler",
            //         "rxjs/dist/types/internal/util",
            //         "rxjs/dist/types/internal/scheduled",
            //         "rxjs/dist/types",
            //         "@polkadot/types/extrinsic",
            //         "@polkadot/types/extrinsic/v4",
            //         "@polkadot/types/ethereum",
            //         "@polkadot/types/generic",
            //         "@polkadot/types-create",
            //         "@polkadot/types-create/create",
            //         "@polkadot/types-create/util",
            //         "@polkadot/types/create",
            //         "@polkadot/util-crypto/address",
            //         "@polkadot/util-crypto/json",
            //         "@polkadot/util-crypto",
            //         "@polkadot/keyring",
            //         "@polkadot/types/codec",
            //         "@mui/icons-material",
            //         "@mui/styles/useTheme",
            //         "axios",
            //         "@polkadot/api-contract",
            //         "@polkadot/api-base/types",
            //         "@polkadot/rpc-core/types",
            //         "@polkadot/rpc-provider",
            //         "@polkadot/api/types",
            //         "@polkadot/api-derive",
            //         "@polkadot/api-derive/accounts",
            //         "@polkadot/api-derive/balances",
            //         "@polkadot/api-derive/bagsList",
            //         "@polkadot/api-derive/council",
            //         "@polkadot/api-derive/crowdloan",
            //         "@polkadot/api-derive/democracy",
            //         "@polkadot/api-derive/elections",
            //         "@polkadot/api-derive/parachains",
            //         "@polkadot/api-derive/session",
            //         "@polkadot/api-derive/society",
            //         "@polkadot/api-derive/staking",
            //         "@polkadot/api-derive/type",
            //         "@polkadot/api-derive/alliance",
            //         "@polkadot/api-derive/bounties",
            //         "@polkadot/api-derive/chain",
            //         "@polkadot/api-derive/contracts",
            //         "@polkadot/api-derive/imOnline",
            //         "@polkadot/api-derive/membership",
            //         "@polkadot/api-derive/technicalCommittee",
            //         "@polkadot/api-derive/treasury",
            //         "@polkadot/api-derive/tx",
            //         "@polkadot/rpc-core",
            //         "@polkadot/rpc-core/util",
            //         "@polkadot/api-derive/util",
            //         "@polkadot/api/util",
            //         "@polkadot/api/base",
            //         "@polkadot/api-contract/Abi",
            //         "@polkadot/api",
            //         "@polkadot/rpc-augment",
            //         "@polkadot/rpc-augment/augment",
            //         "@polkadot/x-bigint",
            //         "@polkadot/util-crypto/secp256k1",
            //         "@polkadot/util-crypto/base32",
            //         "@polkadot/util-crypto/base58",
            //         "@polkadot/util-crypto/base64",
            //         "@polkadot/util-crypto/blake2",
            //         "@polkadot/wasm-crypto",
            //         "@polkadot/wasm-bridge",
            //         "@polkadot/wasm-crypto-init",
            //         "@polkadot/util-crypto/ed25519",
            //         "@polkadot/util-crypto/ed25519/pair",
            //         "@polkadot/util-crypto/ethereum",
            //         "@polkadot/util-crypto/hd/ethereum",
            //         "@polkadot/util-crypto/hd/ledger",
            //         "@polkadot/util-crypto/hd",
            //         "@polkadot/util-crypto/hmac",
            //         "@polkadot/util-crypto/keccak",
            //         "@polkadot/util-crypto/key",
            //         "@polkadot/util-crypto/mnemonic",
            //         "@substrate/ss58-registry",
            //         "@polkadot/networks",
            //         "@polkadot/util-crypto/nacl",
            //         "@polkadot/util-crypto/nacl/box",
            //         "@polkadot/util-crypto/pbkdf2",
            //         "@polkadot/util-crypto/random",
            //         "@polkadot/util-crypto/scrypt",
            //         "@polkadot/util-crypto/secp256k1/pair",
            //         "@polkadot/util-crypto/sha",
            //         "@polkadot/util-crypto/signature",
            //         "@polkadot/util-crypto/sr25519",
            //         "@polkadot/util-crypto/sr25519/pair",
            //         "@polkadot/util-crypto/xxhash",
            //         "@polkadot/keyring/pair",
            //         "@polkadot/rpc-provider/http",
            //         "@substrate/connect/dist/mjs",
            //         "@substrate/connect/dist/mjs/connector",
            //         "@polkadot/rpc-provider/substrate-connect",
            //         "@polkadot/rpc-provider/ws",
            //         "@polkadot/api/submittable",
            //         "@polkadot/api/promise",
            //         "@polkadot/api/rx",
            //         "@polkadot/api-contract/base",
            //         "@polkadot/api-contract/promise",
            //         "@polkadot/api-contract/rx",
            //         "zod/lib/helpers",
            //         "zod/lib",
            //         "zod/lib/locales",
            //         "zod",
            //         "i18next",
            //         "react-i18next/ts4.1",
            //         "@types/mime",
            //         "@types/send",
            //         "@types/range-parser",
            //         "@types/qs",
            //         "@types/express-serve-static-core",
            //         "i18next-http-middleware",
            //         "consola/types",
            //         "@polkadot/extension-inject",
            //         "@polkadot/api-augment",
            //         "@polkadot/types-augment",
            //         "@polkadot/types-augment/registry",
            //         "@polkadot/types-augment/lookup",
            //         "@polkadot/api-augment/substrate"
            //     ]
            // }),
        ],
    }
}
