{
	"ACCOUNT": {
		"NO_POLKADOT_EXTENSION": "Polkadot extension not found"
	},
	"WIDGET": {
		"SELECT_ALL": "Select all containing the following",
		"IF_NONE_CLICK_NEXT": "If there are none, click Next",
		"NEXT": "Next",
		"SUBMIT": "Submit",
		"CANCEL": "Cancel",
		"SELECT_ACCOUNT": "Select account",
		"NO_ACCOUNTS_FOUND": "No accounts found",
		"ACCOUNT_NOT_FOUND": "Account not found",
		"NO_EXTENSION_FOUND": "No extension found",
		"EXTENSION_NOT_FOUND": "Extension not found",
		"CANVAS": "Error with Captcha canvas"
	},
	"GENERAL": {
		"BAD_SURI": "Bad SURI",
		"CANNOT_FIND_CONFIG_FILE": "prosopo.config.js / prosopo.config.ts cannot be found.",
		"JSON_LOAD_FAILED": "Failed to load JSON file",
		"CREATE_JSON_FILE_FAILED": "Failed to create JSON file",
		"ASSERT_ERROR": "AssertionError",
		"GENERATE_CAPTCHAS_JSON_FAILED": "Something went wrong while creating captchas json file",
		"CALCULATE_CAPTCHA_SOLUTION": "Something went wrong while calculating captcha solutions",
		"MNEMONIC_UNDEFINED": "Mnemonic Undefined. Please set the mnemonic in environment variables",
		"NO_MNEMONIC_OR_SEED": "No mnemonic or seed provided",
		"ASYNC_FACTORY_CREATE": "Use `create` factory method",
		"CANT_FIND_KEYRINGPAIR": "Can't find the keyringpair for {{address}}",
		"ENVIRONMENT_NOT_READY": "Environment not ready",
		"INVALID_SIGNATURE": "Invalid signature",
		"PAIR_TYPE_UNDEFINED": "Pair type undefined",
		"NOT_IMPLEMENTED": "Not implemented",
		"NO_PAIR_TYPE_OR_SS58_FORMAT": "No pair type or ss58 format provided",
		"SITE_KEY_MISSING": "SITE KEY missing",
		"ACCOUNT_NOT_FOUND": "Account not found"
	},
	"CONTRACT": {
		"INVALID_METHOD": "Invalid contract method",
		"TX_ERROR": "Error making tx",
		"QUERY_ERROR": "Error making query",
		"INVALID_ADDRESS": "Failed to encode invalid address",
		"INVALID_STORAGE_NAME": "Failed to find given storage name",
		"CAPTCHA_SOLUTION_COMMITMENT_DOES_NOT_EXIST": "Captcha solution commitment does not exist",
		"DAPP_NOT_ACTIVE": "Dapp is not active",
		"CONTRACT_UNDEFINED": "Contract undefined",
		"SIGNER_UNDEFINED": "Signer undefined",
		"SIGNER_NOT_SUPPORTED": "Signer is not supported. Use connect instead, e.g. contract.connect(signer)",
		"CANNOT_FIND_KEYPAIR": "Cannot find keypair",
		"INVALID_TYPE": "Invalid type",
		"INVALID_ABI": "Invalid ABI",
		"NOT_HANDLED": "Not handled",
		"INVALID_STORAGE_TYPE": "Invalid storage type",
		"INTERRUPTED_EVENT": "Event interrupted",
		"TOO_MANY_CALLS": "Too many calls",
		"UNKNOWN_ERROR": "Unknown error",
		"CHAIN_DECIMALS_UNDEFINED": "Chain decimals are not defined",
		"INVALID_DATA_FORMAT": "Invalid data format",
		"INVALID_BLOCKHASH": "Invalid blockhash",
		"TX_QUEUE_ERROR": "Error in Transaction Queue",
		"DISPATCH_ERROR": "Error dispatching transaction"
	},
	"CONFIG": {
		"UNKNOWN_ENVIRONMENT": "Unknown environment requested",
		"INVALID_CAPTCHA_NUMBER": "Please configure captchas configurations correctly",
		"CONFIGURATIONS_LOAD_FAILED": "Prosopo configurations load failed",
		"INVALID_LOG_LEVEL": "Invalid log level",
		"INVALID_PACKAGE_DIR": "Invalid package directory"
	},
	"DATASET": {
		"DATASET_PARSE_ERROR": "Error parsing dataset",
		"SOLUTION_PARSE_ERROR": "Error parsing dataset",
		"HASH_ERROR": "Error hashing dataset",
		"INVALID_DATASET_ID": "Invalid dataset id",
		"DATASET_ID_UNDEFINED": "Dataset id undefined",
		"NOT_ENOUGH_LABELS": "Not enough labels",
		"NOT_ENOUGH_IMAGES": "Not enough images",
		"CAPTCHAS_COUNT_LESS_THAN_CONFIGURED": "Number of captchas in dataset is less than configured number of captchas",
		"SOLUTIONS_COUNT_LESS_THAN_CONFIGURED": "Number of solutions in dataset is less than configured number of solutions",
		"DUPLICATE_IMAGE": "duplicate image detected",
		"MERKLE_ERROR": "Error creating merkle tree"
	},
	"DATABASE": {
		"CONNECT_ERROR": "Failed to connect",
		"DATABASE_IMPORT_FAILED": "Failed to import database engine",
		"DATABASE_UNDEFINED": "Database client is not connected",
		"DATABASE_HOST_UNDEFINED": "Database host address is not defined",
		"COLLECTION_UNDEFINED": "Database collection is not available",
		"DATASET_LOAD_FAILED": "Data set load failed",
		"DATASET_GET_FAILED": "Failed to get dataset",
		"CAPTCHA_GET_FAILED": "Failed to get captcha",
		"CAPTCHA_UPDATE_FAILED": "Failed to update captcha",
		"IMAGE_GET_FAILED": "Failed to get image",
		"NO_CAPTCHAS_FOUND": "No captcha matching datasetId",
		"PENDING_RECORD_NOT_FOUND": "No pending record found",
		"INVALID_HASH": "Invalid hash",
		"SOLUTION_GET_FAILED": "Failed to get solution",
		"DATASET_WITH_SOLUTIONS_GET_FAILED": "No datasets found with required number of solutions",
		"SOLUTION_APPROVE_FAILED": "Failed to approve solution",
		"SOLUTION_FLAG_FAILED": "Failed to flag solution as processed",
		"TABLES_UNDEFINED": "Tables undefined",
		"CONNECTION_UNDEFINED": "Connection undefined",
		"COMMITMENT_FLAG_FAILED": "Failed to flag commitment as processed"
	},
	"CAPTCHA": {
		"PARSE_ERROR": "Error parsing captcha",
		"INVALID_CAPTCHA_ID": "Invalid captcha id",
		"SOLUTION_HASH_ERROR": "Error hashing solution",
		"INVALID_ITEM_FORMAT": "Only image and text item types allowed",
		"INVALID_SOLUTION_TYPE": "Invalid solution type",
		"INVALID_ITEM_HASH": "Invalid item hash",
		"DIFFERENT_DATASET_IDS": "Dataset ids do not match",
		"INVALID_BLOCK_NO": "Invalid block number",
		"INVALID_TIMESTAMP": "Invalid timestamp",
		"ID_MISMATCH": "captcha id mismatch",
		"MISSING_ITEM_HASH": "missing item hash",
		"INVALID_LEAF_HASH": "Invalid leaf hash",
		"INVALID_CAPTCHA_CHALLENGE": "Invalid captcha challenge",
		"INVALID_DATASET_CONTENT_ID": "Invalid dataset content id",
		"DAPP_USER_SOLUTION_NOT_FOUND": "Dapp user solution not found",
		"INVALID_PROVIDER_URL": "Invalid provider url",
		"NO_CAPTCHA": "No captcha found",
		"INVALID_TOKEN": "Invalid token",
		"IP_ADDRESS_MISMATCH": "IP address mismatch",
		"INVALID_SOLUTION": "Invalid solution"
	},
	"API": {
		"BODY_UNDEFINED": "Body must be defined in API POST call",
		"PARAMETER_UNDEFINED": "Parameters must be defined in API POST call",
		"CAPTCHA_FAILED": "You answered one or more captchas incorrectly. Please try again",
		"CAPTCHA_PENDING": "Captcha solutions submitted and awaiting approval",
		"CAPTCHA_PASSED": "You correctly answered the captchas",
		"BAD_REQUEST": "BadRequest",
		"PAYMENT_INFO_NOT_FOUND": "Payment info not found for given block and transaction hashes",
		"USER_VERIFIED": "User verified",
		"USER_NOT_VERIFIED": "User not verified",
		"USER_NOT_VERIFIED_TIME_EXPIRED": "User not verified. Captcha solution has expired.",
		"USER_NOT_VERIFIED_NO_SOLUTION": "User not verified. No captcha solution found.",
		"USER_ALREADY_VERIFIED": "This solution has already been verified. User should complete a new captcha.",
		"UNKNOWN": "Unknown API error"
	},
	"CLI": {
		"PARAMETER_ERROR": "Invalid parameter"
	},
	"DEVELOPER": {
		"PROSOPO_SITE_KEY_MISSING": "PROSOPO_SITE_KEY is not set in .env file.",
		"BALANCE_TOO_LOW": "{{mnemonic}} balance too low: {{balance}}",
		"CAPTCHA_ID_MISSING": "Cannot find captcha data id",
		"COMMITMENT_ID_MISSING": "Commitment id missing",
		"PROVIDER_NOT_FOUND": "Provider not found",
		"PROVIDER_NO_CAPTCHA": "No captchas returned from provider",
		"CREATE_ACCOUNT_FAILED": "Could not create an account!",
		"CREATE_ACCOUNT_FAILED_OUT_OF_FUNDS": "Could not create an account as there are no funds. Restart the substrate node.",
		"NO_MOCK_ENV": "MockEnvironment not set up",
		"ACCOUNT_TYPE_MISSING": "{{accountType}} not created by databasePopulator",
		"FUNDING_FAILED": "Funding failed",
		"MISSING_PROVIDER_PAIR": "Missing provider pair",
		"NETWORK_NOT_FOUND": "Network not found",
		"MISSING_ENV_VARIABLE": "Missing environment variable",
		"GENERAL": "General Dev Error, see context",
		"MISSING_SECRET_KEY": "Missing secret key",
		"KEY_ERROR": "Key error",
		"METHOD_NOT_IMPLEMENTED": "Method not implemented"
	},
	"FS": {
		"DIRECTORY_NOT_FOUND": "Directory not found",
		"FILE_NOT_FOUND": "File not found",
		"FILE_ALREADY_EXISTS": "File already exists",
		"DIRECTORY_ALREADY_EXISTS": "Directory already exists",
		"SAME_FILE": "Same file",
		"INVALID_DIR_FORMAT": "Invalid directory format"
	},
	"PROGUI": {
		"NO_STATE_PROVIDER": "useGlobalState must be used within a GlobalStateProvider"
	}
}
