{
    "WIDGET": {
        "SELECT_ALL": "Select all images containing a {{target}}",
        "NEXT": "Next",
        "SUBMIT": "Submit",
        "CANCEL": "Cancel",
        "SELECT_ACCOUNT": "Select account",
        "NO_ACCOUNTS_FOUND": "No accounts found",
        "ACCOUNT_NOT_FOUND": "Account not found",
        "NO_EXTENSION_FOUND": "No extension found",
        "EXTENSION_NOT_FOUND": "Extension not found"
    },
    "GENERAL": {
        "BAD_SURI": "Bad SURI",
        "CANNOT_FIND_CONFIG_FILE": "prosopo.config.js / prosopo.config.ts cannot be found.",
        "JSON_LOAD_FAILED": "Failed to load JSON file",
        "CREATE_JSON_FILE_FAILED": "Failed to create JSON file",
        "ASSERT_ERROR": "AssertionError",
        "GENERATE_CPATCHAS_JSON_FAILED": "Something went wrong while creating captchas json file",
        "CALCULATE_CAPTCHA_SOLUTION": "Something went wrong while calculating captcha solutions",
        "MNEMONIC_UNDEFINED": "Provider mnemonic Undefined. Please set `PROVIDER_MNEMONIC` in environment variables",
        "ASYNC_FACTORY_CREATE": "Use `create` factory method",
        "CANT_FIND_KEYRINGPAIR": "Can't find the keyringpair for {{address}}",
        "ENVIRONMENT_NOT_READY": "Environment not ready"
    },
    "CONTRACT": {
        "INVALID_METHOD": "Invalid contract method",
        "TX_ERROR": "Error making tx",
        "QUERY_ERROR": "Error making query",
        "INVALID_ADDRESS": "Failed to encode invalid address",
        "INVALID_STORAGE_NAME": "Failed to find given storage name",
        "CAPTCHA_SOLUTION_COMMITMENT_DOES_NOT_EXIST": "Captcha solution commitment does not exist",
        "DAPP_NOT_ACTIVE": "Dapp is not active",
        "CONTRACT_UNDEFINED": "Contract undefined",
        "SIGNER_UNDEFINED": "Signer undefined",
        "SIGNER_NOT_SUPPORTED": "Signer is not supported. Use connect instead, e.g. contract.connect(signer)",
        "CANNOT_FIND_KEYPAIR": "Cannot find keypair"
    },
    "CONFIG": {
        "UNKNOWN_ENVIRONMENT": "Unknown environment requested",
        "INVALID_CAPTCHA_NUMBER": "Please configure captchas configurations correctly",
        "CONFIGURATIONS_LOAD_FAILED": "Prosopo configurations load failed"
    },
    "DATASET": {
        "PARSE_ERROR": "Error parsing dataset",
        "HASH_ERROR": "Error hashing dataset",
        "INVALID_DATASET_ID": "Invalid dataset id",
        "DATASET_ID_UNDEFINED": "Dataset id undefined"
    },
    "DATABASE": {
        "CONNECT_ERROR": "Failed to connect",
        "DATABASE_IMPORT_FAILED": "Failed to import database engine",
        "DATABASE_UNDEFINED": "Database client is not connected",
        "COLLECTION_UNDEFINED": "Database collection is not available",
        "DATASET_LOAD_FAILED": "Data set load failed",
        "DATASET_GET_FAILED": "Failed to get dataset",
        "CAPTCHA_GET_FAILED": "Failed to get captcha",
        "NO_CAPTCHAS_FOUND": "No captcha matching datasetId",
        "PENDING_RECORD_NOT_FOUND": "No pending record found",
        "INVALID_HASH": "Invalid hash",
        "SOLUTION_GET_FAILED": "Failed to get solution",
        "DATASET_WITH_SOLUTIONS_GET_FAILED": "No datasets found with required number of solutions",
        "SOLUTION_APPROVE_FAILED": "Failed to approve solution"
    },
    "CAPTCHA": {
        "PARSE_ERROR": "Error parsing captcha",
        "INVALID_CAPTCHA_ID": "Invalid captcha id",
        "SOLUTION_HASH_ERROR": "Error hashing solution",
        "INVALID_ITEM_FORMAT": "Only image and text item types allowed",
        "INVALID_ITEM_HASH": "Invalid item hash",
        "DIFFERENT_DATASET_IDS": "Dataset ids do not match",
        "INVALID_BLOCK_NO": "Invalid block number",
        "ID_MISMATCH": "captcha id mismatch",
        "MISSING_ITEM_HASH": "missing item hash",
        "INVALID_LEAF_HASH": "Invalid leaf hash",
        "INVALID_CAPTCHA_CHALLENGE": "Invalid captcha challenge",
        "INVALID_DATASET_CONTENT_ID": "Invalid dataset content id",
        "DAPP_USER_SOLUTION_NOT_FOUND": "Dapp user solution not found",
        "INVALID_PROVIDER_URL": "Invalid provider url",
    },
    "API": {
        "BODY_UNDEFINED": "Body must be defined in API POST call",
        "PARAMETER_UNDEFINED": "Parameters must be defined in API POST call",
        "CAPTCHA_FAILED": "You answered one or more captchas incorrectly. Please try again",
        "CAPTCHA_PENDING": "Captcha solutions submitted and awaiting approval",
        "CAPTCHA_PASSED": "You correctly answered the captchas",
        "BAD_REQUEST": "BadRequest",
        "PAYMENT_INFO_NOT_FOUND": "Payment info not found for given block and transaction hashes",
        "USER_VERIFIED": "User verified",
        "USER_NOT_VERIFIED": "User not verified"
    },
    "CLI": {
        "PARAMETER_ERROR": "Invalid parameter"
    },
    "DEVELOPER": {
        "DAPP_CONTRACT_ADDRESS_MISSING": "DAPP_CONTRACT_ADDRESS is not set in .env file.",
        "BALANCE_TOO_LOW": "{{mnemonic}} balance too low: {{balance}}",
        "CAPTCHA_ID_MISSING": "Cannot find captcha data id",
        "COMMITMENT_ID_MISSING": "Commitment id missing",
        "PROVIDER_NOT_FOUND": "Provider not found",
        "CREATE_ACCOUNT_FAILED": "Could not create an account!",
        "CREATE_ACCOUNT_FAILED_OUT_OF_FUNDS": "Could not create an account as there are no funds. Restart the substrate node.",
        "NO_MOCK_ENV": "MockEnvironment not set up",
        "ACCOUNT_TYPE_MISSING": "{{accountType}} not created by databasePopulator"
    }
}
