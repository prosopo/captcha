{
	"$schema": "./node_modules/nx/schemas/nx-schema.json",
	"namedInputs": {
		"custom": [
			"{projectRoot}/**",
			{
				"runtime": "node -e \"console.log(JSON.stringify(process.env))\""
			},
			{
				"runtime": "find dist/ -type f -exec sha256sum {} + | sort | sha256sum"
			},
			"{workspaceRoot}/nx.json",
			"{workspaceRoot}/package.json",
			"{workspaceRoot}/package-lock.json"
		]
	},
	"targetDefaults": {
		"build": {
			"dependsOn": ["^build", "@prosopo/config:build"],
			"cache": true,
			"inputs": ["^custom", "custom"],
			"outputs": ["{projectRoot}/dist/**/*"]
		},
		"build:cjs": {
			"dependsOn": ["^build:cjs", "@prosopo/config:build"],
			"cache": true,
			"inputs": ["^custom", "custom"],
			"outputs": ["{projectRoot}/dist/**/*"]
		},
		"bundle": {
			"dependsOn": ["@prosopo/config:build"],
			"cache": true,
			"inputs": ["^custom", "custom"],
			"outputs": ["{projectRoot}/dist/**/*"]
		},
		"bundle:webpack": {
			"dependsOn": ["@prosopo/config:build"],
			"cache": true,
			"inputs": ["^custom", "custom"],
			"outputs": ["{projectRoot}/dist/**/*"]
		},
		"test": {
			"cache": true,
			"dependsOn": ["@prosopo/config:build"],
			"inputs": ["^custom", "custom"]
		},
		"typecheck": {
			"dependsOn": ["^typecheck"],
			"cache": true,
			"inputs": ["^custom", "custom"],
			"outputs": ["{projectRoot}/dist/**/*"]
		},
		"build:tsc": {
			"dependsOn": ["^build:tsc"],
			"cache": true,
			"inputs": ["^custom", "custom"],
			"outputs": ["{projectRoot}/dist/**/*"]
		},
		"lint": {
			"cache": false
		},
		"clean": {
			"cache": false
		},
		"clean:deps": {
			"cache": false,
			"dependsOn": ["clean", "^clean"]
		}
	},
	"defaultBase": "main",
	"release": {
		"projects": ["*"],
		"versionPlans": true,
		"projectsRelationship": "independent",
		"changelog": {
			"projectChangelogs": true,
			"automaticFromRef": true
		}
	},
	"parallel": 8,
	"pluginsConfig": {
		"@nx/js": {
			"projectsAffectedByDependencyUpdates": "auto"
		}
	},
	"neverConnectToCloud": true,
	"sync": {
		"applyChanges": true
	},
	"useDaemonProcess": false
}
