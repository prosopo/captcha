name: contract_release_process

on:
    push:
        branches:
            - 'main'
        paths:
            - 'package.json'
            - '.github/workflows/contract_release_process.yml'
    workflow_dispatch:

jobs:
    check_version:
        uses: prosopo/captcha/.github/workflows/check_version.yml@main
    build:
        needs: check_version
        runs-on: ubuntu-latest
        steps:
            # Checkout the repo
            - uses: actions/checkout@v3

            - run: mkdir -p protocol/cargo-cache
            - run: mkdir -p protocol/target
            - run: mkdir -p node_modules
            - run: mkdir -p ~/.cache/Cypress

            - name: Restore cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      protocol/cargo-cache
                      protocol/target
                      node_modules
                      ~/.cache/Cypress
                  # note that restoring a cache in github is a pain. The trailing '-' matches any string after the '-', therefore 'abc-' would match a cache named 'abc-1234' or 'abc-5678', etc.
                  # the problem is 'abc-' will not match a cache named 'abc'! So if you're using wildcard cache name selectors like this, you need a field that changes as the suffix to become the wildcard
                  # here we're setting the key to an unused cache key so it falls back to the wildcard selector in `restore-keys`
                  key: some-unused-cache-key
                  restore-keys: |
                      project-cache-${{ runner.os }}-${{ runner.arch }}-

            - name: Build the contract sources
              if: needs.check_version.outputs.bump == 'true'
              run: |
                  set -e  # Exit immediately if a command exits with a non-zero status.

                  npm ci

                  cd protocol/dev
                  npm run build
                  npm run cli -- clean --docker
                  npm run cli -- build --docker --release

                  cd ../..

            - name: Create Release
              if: needs.check_version.outputs.bump == 'true'
              id: create_release
              uses: actions/create-release@v1
              with:
                  tag_name: ${{ needs.check_version.next_version }}
                  release_name: Release ${{ needs.check_version.next_version }}
                  body: Automated release of contract sources for npm version ${{ needs.check_version.next_version }}
                  draft: false
                  prerelease: false
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Contract ABI
              if: needs.check_version.outputs.bump == 'true'
              id: upload-release-asset-abi
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./protocol/target/ink/captcha/captcha.json
                  asset_name: captcha.json
                  asset_content_type: application/json
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Contract WASM
              if: needs.check_version.outputs.bump == 'true'
              id: upload-release-asset-wasm
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./protocol/target/ink/captcha/captcha.wasm
                  asset_name: captcha.wasm
                  asset_content_type: application/octet-stream
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Contract
              if: needs.check_version.outputs.bump == 'true'
              id: upload-release-asset-contract
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./protocol/target/ink/captcha/captcha.contract
                  asset_name: captcha.contract
                  asset_content_type: application/octet-stream
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Proxy ABI
              if: needs.check_version.outputs.bump == 'true'
              id: upload-release-asset-abi-proxy
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./protocol/target/ink/proxy/proxy.json
                  asset_name: proxy.json
                  asset_content_type: application/json
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Proxy WASM
              if: needs.check_version.outputs.bump == 'true'
              id: upload-release-asset-wasm-proxy
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./protocol/target/ink/proxy/proxy.wasm
                  asset_name: proxy.wasm
                  asset_content_type: application/octet-stream
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Upload Proxy
              if: needs.check_version.outputs.bump == 'true'
              id: upload-release-asset-contract-proxy
              uses: actions/upload-release-asset@v1
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./protocol/target/ink/proxy/proxy.contract
                  asset_name: proxy.contract
                  asset_content_type: application/octet-stream
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
