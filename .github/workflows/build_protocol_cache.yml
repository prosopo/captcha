name: build_protocol_cache

# on push to main when contract code has changed
# we do this because any branch can use caches built on main, whereas caches built on other branches are only available to that branch and its children
on:
    push:
        branches:
            - 'main'
        paths:
            - 'protocol/**'
            - '.github/workflows/**'

env:
    CARGO_TERM_COLOR: always
    GH_TOKEN: ${{ github.token }}

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3

            - run: mkdir -p protocol/cargo-cache
            - run: mkdir -p protocol/target
            - run: mkdir -p node_modules

            - name: Restore protocol cache
              uses: actions/cache/restore@v3
              id: cache-restore
              with:
                  path: |
                      protocol/cargo-cache
                      protocol/target
                      node_modules
                  # note that restoring a cache in github is a pain. The trailing '-' matches any string after the '-', therefore 'abc-' would match a cache named 'abc-1234' or 'abc-5678', etc.
                  # the problem is 'abc-' will not match a cache named 'abc'! So if you're using wildcard cache name selectors like this, you need a field that changes as the suffix to become the wildcard
                  # here we're setting the key to an unused cache key so it falls back to the wildcard selector in `restore-keys`
                  key: some-unused-cache-key
                  restore-keys: |
                      protocol-${{ runner.os }}-${{ runner.arch }}-

            - name: ls
              run: |
                  set -x
                  ls -la
                  ls -la protocol/cargo-cache
                  ls -la protocol/target/*
            
            - name: Npm install
              run: |
                  cd protocol/dev
                  npm install

            - name: Build contracts
              id: build
              run: |
                  touch protocol/target/ink/$(date | tr ' ' '_')

            - name: ls
              run: |
                  set -x
                  ls -la
                  ls -la protocol/cargo-cache
                  ls -la protocol/target/*

            - name: Cleanup protocol caches
              if: always()
              run: |
                  set +e; gh extension install actions/gh-actions-cache; set -e
                  REPO=${{ github.repository }}
                  echo "Fetching list of cache key"
                  cacheKeys=$(gh actions-cache list --sort created-at --order desc --limit 100 -R $REPO --key protocol-${{ runner.os }}-${{ runner.arch }}- | cut -f 1)
                  echo caches to be removed:
                  echo ${cacheKeys}
                  set +e
                  for cacheKey in $cacheKeys
                  do
                      gh actions-cache delete $cacheKey -R $REPO --confirm
                  done

            - name: Save protocol cache
              uses: actions/cache/save@v3
              if: always()
              with:
                  path: |
                      protocol/cargo-cache
                      protocol/target
                      node_modules
                  key: protocol-${{ runner.os }}-${{ runner.arch }}-${{ github.run_id }}-${{ github.run_attempt }}
