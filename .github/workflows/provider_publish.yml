name: provider_publish

on:
  push:
    # only on the main branch
    branches:
      - main
      - provider-buildx

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:

      - name: Print contexts
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          ENV_CONTEXT: ${{ toJson(env) }}
          VARS_CONTEXT: ${{ toJson(vars) }}
          JOB_CONTEXT: ${{ toJson(job) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
          RUNNER_CONTEXT: ${{ toJson(runner) }}
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
          NEEDS_CONTEXT: ${{ toJson(needs) }}
          INPUTS_CONTEXT: ${{ toJson(inputs) }}
        run: |
          echo "******************************"
          echo "github:" "$GITHUB_CONTEXT"
          echo "******************************"
          echo "env:" "$ENV_CONTEXT"
          echo "******************************"
          echo "vars:" "$VARS_CONTEXT"
          echo "******************************"
          echo "job:" "$JOB_CONTEXT"
          echo "******************************"
          echo "steps:" "$STEPS_CONTEXT"
          echo "******************************"
          echo "runner:" "$RUNNER_CONTEXT"
          echo "******************************"
          echo "secrets:" "$SECRETS_CONTEXT"
          echo "******************************"
          echo "strategy:" "$STRATEGY_CONTEXT"
          echo "******************************"
          echo "matrix:" "$MATRIX_CONTEXT"
          echo "******************************"
          echo "needs:" "$NEEDS_CONTEXT"
          echo "******************************"
          echo "inputs:" "$INPUTS_CONTEXT"
          echo "******************************"
      # checkout the repo
      - uses: actions/checkout@v3
        with:
          # fetch all history + branches
          fetch-depth: 0

      - name: Echo Path
        run: echo ${{github.workspace}}

      # setup node
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Install npm
        run: npm i -g npm@$(cat package.json | jq -r .engines.npm)

      - name: Install
        run: |
          npm install

      # Add support for more platforms with QEMU (optional)
      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build the production CLI package
        run: |
          echo "Building the production CLI package..."
          # Copy the rococo env file to production env file
          echo "Copying the rococo env to production env file in cli package"
          cp ./dev/scripts/env.production ./packages/cli/.env.production
          
          # Navigate to the provider CLI directory and build
          echo "Navigating to 'packages/cli' and bundling..."
          cd packages/cli
          NODE_ENV=production npm run build
          NODE_ENV=production npm run bundle:prod
          
          # Navigate back to the project root
          echo "Navigating back to project root..."
          cd ../..
          echo $(pwd)

      - name: Echo current path
        run: echo ${pwd}

      - name: Build and push the Provider Bundle
        id: publish_docker_provider
        continue-on-error: true
        uses: docker/build-push-action@v5
        with:
          context: ${{github.workspace}}
          file: ${{github.workspace}}/docker/images/provider.dockerfile
          platforms: linux/amd64,linux/arm64
          push: false
          tags: prosopo/provider:dev
