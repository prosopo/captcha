name: Provider Tests

on:
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  ENVIRONMENT: development
  GH_TOKEN: ${{ github.token }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check github refname
        run: |
          echo ${{ github.ref }}
          echo ${{ github.ref_name }}
          echo ${{ github.head_ref }}
          echo ${{ github.base_ref }}

      - name: Remove stopped containers
        run: docker rm $(docker ps -a -q) || true

      - name: Clone captcha
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          repository: prosopo/captcha
          path: captcha
          submodules: recursive

      - run: mkdir -p ~/image-cache

      - id: image-cache
        uses: actions/cache@v3
        with:
          path: ~/image-cache
          key: image-cache-docker-${{ runner.os }}-${{ hashFiles('./captcha/docker/docker-compose.test.yml') }}

      - if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
          docker pull prosopo/substrate-contracts-node:v0.25
          docker save -o ~/image-cache/prosopo.tar prosopo/substrate-contracts-node:v0.25
          docker pull mongo:5.0.4
          docker save -o ~/image-cache/mongo.tar mongo:5.0.4

      - if: steps.image-cache.outputs.cache-hit == 'true'
        run: |
          ls ~/image-cache
          docker load -i ~/image-cache/prosopo.tar
          docker load -i ~/image-cache/mongo.tar

      - name: Start the docker images
        run: |
          cd captcha
          docker compose --file ./docker/docker-compose.test.yml up -d
          docker container ls

      - id: node-cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node-cache-${{ runner.os }}-

      - if: ${{ steps.node-cache.outputs.cache-hit == 'true' }}
        run: |
          cd ~/.npm
          ls

      - name: Install dependencies
        run: |
          cd captcha
          ls .
          npm install

      - name: Build provider and dependencies
        # Next few lines should contain the number of packages that provider depends on (check tsconfig.json)
        run: |
          cd captcha
          echo $(npx tsc --version)
          cd dev && echo $(pwd) && echo $(git rev-parse HEAD) && npm run build
          cp env.development .env.test
          echo "NODE_ENV=test" >> $GITHUB_ENV
          echo $NODE_ENV
        

      - name: Deploy the contracts and run the unit tests
        run: |
          cd captcha
          npm run deploy_protocol
          npm run deploy_dapp
          git status | head -n 1
          cd dev
          git status | head -n 1
          docker container ls
          cat .env.test
          npm run test

      - name: Remove the docker containers
        run: |
          cd captcha
          docker compose --file ./docker/docker-compose.test.yml down

