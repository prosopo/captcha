name: npm_release_process

on:
    push:
        branches:
            - 'main'
        paths:
            - 'package.json'
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            # Checkout the repo
            - uses: actions/checkout@v3

            # Get the provider image version from the root package.json and the latest package version from npm
            - name: Get provider image version
              run: |
                  echo "PROVIDER_IMAGE_VERSION=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV
                  echo "LATEST_PROVIDER_VERSION=$(npm view @prosopo/provider version)" >> $GITHUB_ENV

            - run: mkdir -p protocol/cargo-cache
            - run: mkdir -p protocol/target
            - run: mkdir -p node_modules
            - run: mkdir -p .cache/Cypress

            - name: Set versions string
              run: echo "VERSIONS_TO_COMPARE=${{ env.PROVIDER_IMAGE_VERSION }}\\n${{ env.LATEST_PROVIDER_VERSION }}" >> $GITHUB_ENV

            - name: Restore cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      protocol/cargo-cache
                      protocol/target
                      node_modules
                      .cache/Cypress
                  # note that restoring a cache in github is a pain. The trailing '-' matches any string after the '-', therefore 'abc-' would match a cache named 'abc-1234' or 'abc-5678', etc.
                  # the problem is 'abc-' will not match a cache named 'abc'! So if you're using wildcard cache name selectors like this, you need a field that changes as the suffix to become the wildcard
                  # here we're setting the key to an unused cache key so it falls back to the wildcard selector in `restore-keys`
                  key: some-unused-cache-key
                  restore-keys: |
                      project-cache-${{ runner.os }}-${{ runner.arch }}-

            - name: Install dependencies
              run: npm ci

            - name: Build the packages
              run: npm run build:all

            - name: Check provider image version
              id: check_provider_image_version
              run: |
                  echo "PROVIDER_IMAGE_VERSION=${{ env.PROVIDER_IMAGE_VERSION }}"
                  echo "LATEST_PROVIDER_VERSION=${{ env.LATEST_PROVIDER_VERSION }}"

                  # Condition 1: If version is equal to the npm version, exit successfully
                  if [[ "${{ env.PROVIDER_IMAGE_VERSION }}" == "${{ env.LATEST_PROVIDER_VERSION }}" ]]; then
                      echo "Current npm version detected, exiting successfully"
                      exit 0
                  fi

                  # Condition 2: If version is less than the npm version, exit with error
                  # Technically this is less than or equal, but we have checked for equality above
                  if [[ $(echo -e "${{ env.VERSIONS_TO_COMPARE }}" | sort -V | head -n 1) == "${{ env.PROVIDER_IMAGE_VERSION }}" ]]; then
                      echo "Version bump required, exiting with error"
                      exit 1
                  fi

                  # Condition 3: If greater than npm version, release to npm if running on GitHub Actions
                  # Reverse the versions list, then get the first element
                  if [[ $(echo -e "${{ env.VERSIONS_TO_COMPARE }}" | sort -Vr | head -n 1) == "${{ env.PROVIDER_IMAGE_VERSION }}" ]]; then
                      echo "Version bump detected, continuing..."

                      if [[ "${{ vars.HOST_GITHUB_ACTIONS }}" == true ]]; then
                        echo "Running on GitHub Actions"
                        # Write the npm token to ~/.npmrc
                        echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
                        echo "Publishing to npm..."
                        npx --workspaces npm publish
                      else
                        echo "Running locally via act, skipping npm publish."
                      fi
                  fi
