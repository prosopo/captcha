# Build a cache of build artifacts after PRs to speed up subsequent builds

name: cache

on:
    push:
        branches: [main, dev, staging]
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

env:
    GITHUB_TOKEN: ${{ secrets.PROSOPONATOR_PAT }}
    GH_TOKEN: ${{ secrets.PROSOPONATOR_PAT }}
    CARGO_TERM_COLOR: always
    NODE_OPTIONS: "--max-old-space-size=4096"

defaults:
    run:
        shell: bash

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Setup
              uses: ./.github/setup@${{ github.ref_name }}

            # clean the cache, otherwise we get artifacts left over from the previous run sit in the cache for eternity. Do a clean build every time.
            - run: rm -rf ~/.npm node_modules ~/.cache/Cypress
            # ensure the cache directories exist
            - run: mkdir -p ~/.npm node_modules ~/.cache/Cypress

            - run: npm ci

            # install cypress so we don't have to do that every time
            - run: npx cypress install

            - run: NODE_ENV=test npm run build:all

            - name: Save npm cache
              uses: actions/cache/save@v4
              if: always()
              with:
                  path: |
                    ~/.npm
                    ~/.cache/Cypress
                    node_modules
                  key: npm-${{ hashFiles('**/package-lock.json') }}-${{ runner.os }}-${{ runner.arch }}-${{ github.run_id }}-${{ github.run_attempt }}

            - name: Cleanup npm caches
              if: always()
              run: |
                  set -euxo pipefail # stop on errors, print commands, fail on pipe fails

                  # remove all but the latest cache, leaving only the cache we just saved
                  set +e; gh extension install actions/gh-actions-cache; set -e
                  echo "Fetching list of cache key"
                  cacheKeys=$(gh actions-cache list --sort created-at --order desc --limit 100 -R "${{ github.repository }}" --key "npm-${{ runner.os }}-${{ runner.arch }}-" | cut -f 1 | tail -n +3)
                  echo caches to be removed:
                  echo "${cacheKeys}"
                  set +e
                  for cacheKey in $cacheKeys
                  do
                      gh actions-cache delete "$cacheKey" -R "${{ github.repository }}" --confirm
                  done
