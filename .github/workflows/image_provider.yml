name: Rust

#  1. on push to main
on:
  push:
    branches:
      - 'main'
      - '307-test-restricted-provider-workflow'
    paths:
      - 'packages/**'

env:
  CARGO_TERM_COLOR: always
  GH_TOKEN: ${{ github.token }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v3

      # Get the version of the provider image from the version of the root package.json
      - name: Get provider image version
        id: get_provider_image_version
        run: |
          echo "::set-output name=provider_image_version::$(cat package.json | jq -r '.version')"

      # npm install
      - name: Npm install
        run: |
          cd protocol/dev
          npm install

      # build the packages
      - name: Build packages
        run: |
          cd captcha/dev
          npm run build
      

      # build the cli production bundle
      - name: Build cli production bundle
        run: |
          cd captcha
          npm run build:cli:prod

      # create the provider image
      - name: Build provider image
        run: |
          cd captcha
          TAG=v{{ steps.get_provider_image_version.outputs.provider_image_version }} docker compose --file ./docker/docker-compose.provider.yml build --progress=plain

      # push the provider image to docker hub
      - name: Push provider image to docker hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push prosopo/provider:{{ steps.get_provider_image_version.outputs.provider_image_version }}
