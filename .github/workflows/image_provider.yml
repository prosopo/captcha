name: Provider Docker Image

on:
  push:
    branches:
      - 'main'
    paths:
      - 'packages/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'packages/**'
      - '.github/workflows/image_provider.yml'

env:
  CARGO_TERM_COLOR: always
  GH_TOKEN: ${{ github.token }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - name: Clone captcha
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          repository: prosopo/captcha
          path: captcha
          submodules: recursive

      # Get the version of the provider image from the version of the root package.json
      - name: Get provider image version
        id: get_provider_image_version
        run: |
          echo "{provider_image_version}=$(cat package.json | jq -r '.version')" >> $GITHUB_OUTPUT



      # npm install
      - name: Npm install
        run: |
          cd captcha
          npm install

      # build the packages
      - name: Build packages
        run: |
          cd captcha/dev
          npm run build
      

      # build the cli production bundle
      - name: Build cli production bundle
        run: |
          cd captcha
          cp ./dev/env.rococo ./packages/cli/.env.rococo
          NODE_ENV=rococo npm run -w @prosopo/cli build:webpack:prod

      # create the provider image
      - name: Build provider image
        run: |
          cd captcha
          TAG=v{{ steps.get_provider_image_version.outputs.provider_image_version }} docker compose --file ./docker/docker-compose.provider.yml build --progress=plain

      # push the provider image to docker hub, if the push is to main
      - name: Push provider image to docker hub
        run: |
          if [ "${{ github.ref }}" != "refs/heads/main" ]; then exit 0; fi
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push prosopo/provider:{{ steps.get_provider_image_version.outputs.provider_image_version }}
