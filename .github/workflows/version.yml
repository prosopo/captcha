# process changesets to bump package versions, then pr them back into the branch

name: version

on:
    push:
        branches: # on push to these branches
            - main
            - build/*
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: false # queue the new runs until previous have finished. This avoids version bumps overlapping with each other

defaults:
    run:
        shell: bash

jobs:
    version:
        name: version
        runs-on: ubuntu-latest
        steps:
            - name: Print contexts
              uses: prosopo/captcha/.github/actions/print_contexts@gha
              with:
                    INPUTS_CONTEXT: ${{ toJson(inputs) }}
                    NEEDS_CONTEXT: ${{ toJson(needs) }}
                    VARS_CONTEXT: ${{ toJson(vars) }}
                    SECRETS_CONTEXT: ${{ toJson(secrets) }}
        
            - name: Get token for gh app
              id: app_token
              uses: peter-murray/workflow-application-token-action@v3
              with:
                application_id: ${{ vars.PROSOPONATOR_APP_ID }}
                application_private_key: ${{ secrets.PROSOPONATOR_APP_PRIVATE_KEY }}

            - uses: actions/checkout@v4
              with:
                  submodules: 'recursive'
                  token: ${{ steps.app_token.outputs.token }}
                  fetch-depth: 0 # fetch all history

            - uses: prosopo/captcha/.github/actions/npm@gha

            - name: git config
              run: |
                set -x
                git config user.name "prosoponator[bot]"
                git config user.email "dev@prosopo.io"

            - name: set prerelease mode
              run: |
                set -x
                # if there are changesets present (i.e. any *.md files in .changeset)
                # then we need to consider prerelease mode
                # else there's no changesets, so we can skip this step
                if find .changeset -maxdepth 1 -name "*.md" | grep -q .; then
                  echo "Changesets found, configuring pre-release mode"
                  tag=$(echo "${GITHUB_REF#refs/heads/}" | cut -d'/' -f2-)
                  # enter prerelease mode if the branch is not main
                  # exit prerelease mode if the branch is main
                  if [[ ${{ github.ref }} == "refs/heads/main" ]]; then
                    if [[ -f .changeset/pre.json ]]; then
                      # exit prerelease mode if not already
                      echo "Exiting prerelease mode"
                      npx changeset pre exit
                    else
                      echo "Already in non-prerelease mode"
                    fi
                  else
                    if [[ ! -f .changeset/pre.json ]]; then
                      # enter prerelease mode if not already
                      echo "Entering prerelease mode"
                      npx changeset pre enter $tag
                    else
                      echo "Already in prerelease mode"
                    fi
                  fi
                fi

            - name: apply changesets
              run: |
                # apply changesets to bump package versions
                npm run changesets:version

            - name: push changes
              env:
                GITHUB_TOKEN: ${{ steps.app_token.outputs.token }}
                BRANCH_PROTECTION_DISABLED: true
              run: |
                if [[ -z $(git status --porcelain) ]]; then
                  echo "No changes to commit"
                  exit 0
                fi
                git add .
                git commit -m "version bump"
                git push
