{
  "source": {
    "hash": "0xb2c6ebca13fe9efc872d43161577d4ff07ed5ce24c17248ce547e1e26c731422",
    "language": "ink! 4.1.0",
    "compiler": "rustc 1.69.0",
    "build_info": {
      "build_mode": "Debug",
      "cargo_contract_version": "2.0.0-rc.1",
      "rust_toolchain": "stable-x86_64-unknown-linux-gnu",
      "wasm_opt_settings": {
        "keep_debug_symbols": false,
        "optimization_passes": "Z"
      }
    }
  },
  "contract": {
    "name": "common",
    "version": "0.3.0",
    "authors": [
      "Chris Taylor chris@prosopo.io",
      "George Oastler george@prosopo.io",
      "Vincenzo Ferrara",
      "Siniša Čanak"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [],
        "default": false,
        "docs": [],
        "label": "new",
        "payable": false,
        "returnType": {
          "displayName": [
            "ink_primitives",
            "ConstructorResult"
          ],
          "type": 0
        },
        "selector": "0x9bae9d5e"
      }
    ],
    "docs": [
      " An ink contract must be defined in order to import functions into another contract"
    ],
    "environment": {
      "accountId": {
        "displayName": [
          "AccountId"
        ],
        "type": 4
      },
      "balance": {
        "displayName": [
          "Balance"
        ],
        "type": 7
      },
      "blockNumber": {
        "displayName": [
          "BlockNumber"
        ],
        "type": 10
      },
      "chainExtension": {
        "displayName": [
          "ChainExtension"
        ],
        "type": 11
      },
      "hash": {
        "displayName": [
          "Hash"
        ],
        "type": 8
      },
      "maxEventTopics": 4,
      "timestamp": {
        "displayName": [
          "Timestamp"
        ],
        "type": 9
      }
    },
    "events": [],
    "lang_error": {
      "displayName": [
        "ink",
        "LangError"
      ],
      "type": 2
    },
    "messages": [
      {
        "args": [],
        "default": false,
        "docs": [
          " Print and get the caller of this function",
          " This will print and get the caller's account in byte format, e.g. [1,2,3...32]"
        ],
        "label": "get_caller",
        "mutates": false,
        "payable": false,
        "returnType": {
          "displayName": [
            "ink",
            "MessageResult"
          ],
          "type": 3
        },
        "selector": "0x8dd15f8f"
      }
    ]
  },
  "storage": {
    "root": {
      "layout": {
        "struct": {
          "fields": [],
          "name": "Common"
        }
      },
      "root_key": "0x00000000"
    }
  },
  "types": [
    {
      "id": 0,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 1
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 1
          },
          {
            "name": "E",
            "type": 2
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 1,
      "type": {
        "def": {
          "tuple": []
        }
      }
    },
    {
      "id": 2,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "index": 1,
                "name": "CouldNotReadInput"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "LangError"
        ]
      }
    },
    {
      "id": 3,
      "type": {
        "def": {
          "variant": {
            "variants": [
              {
                "fields": [
                  {
                    "type": 4
                  }
                ],
                "index": 0,
                "name": "Ok"
              },
              {
                "fields": [
                  {
                    "type": 2
                  }
                ],
                "index": 1,
                "name": "Err"
              }
            ]
          }
        },
        "params": [
          {
            "name": "T",
            "type": 4
          },
          {
            "name": "E",
            "type": 2
          }
        ],
        "path": [
          "Result"
        ]
      }
    },
    {
      "id": 4,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 5,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "AccountId"
        ]
      }
    },
    {
      "id": 5,
      "type": {
        "def": {
          "array": {
            "len": 32,
            "type": 6
          }
        }
      }
    },
    {
      "id": 6,
      "type": {
        "def": {
          "primitive": "u8"
        }
      }
    },
    {
      "id": 7,
      "type": {
        "def": {
          "primitive": "u128"
        }
      }
    },
    {
      "id": 8,
      "type": {
        "def": {
          "composite": {
            "fields": [
              {
                "type": 5,
                "typeName": "[u8; 32]"
              }
            ]
          }
        },
        "path": [
          "ink_primitives",
          "types",
          "Hash"
        ]
      }
    },
    {
      "id": 9,
      "type": {
        "def": {
          "primitive": "u64"
        }
      }
    },
    {
      "id": 10,
      "type": {
        "def": {
          "primitive": "u32"
        }
      }
    },
    {
      "id": 11,
      "type": {
        "def": {
          "variant": {}
        },
        "path": [
          "ink_env",
          "types",
          "NoChainExtension"
        ]
      }
    }
  ],
  "version": "4"
}